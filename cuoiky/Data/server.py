import csv
import json
from datetime import datetime
from paho import mqtt
from paho.mqtt import client as mqtt_client

BROKER = 'broker.hivemq.com'
PORT = 1883
TOPIC = 'demo/room1/sensor/data'  # ƒë√∫ng topic ESP g·ª≠i
CLIENT_ID = 'iot_logger_luong'
CSV_FILE = 'iot_log.csv'


def on_connect(client, userdata, flags, reason_code, properties=None):
    if reason_code == 0:
        print("‚úÖ MQTT: K·∫øt n·ªëi th√†nh c√¥ng.")
        client.subscribe(TOPIC)
        print(f"ƒêang l·∫Øng nghe d·ªØ li·ªáu t·∫°i topic: {TOPIC}")
    else:
        print("‚ùå K·∫øt n·ªëi th·∫•t b·∫°i, m√£ l·ªói:", reason_code)


def on_message(client, userdata, msg):
    try:
        payload = msg.payload.decode()
        print("üì© Nh·∫≠n:", payload)

        data = json.loads(payload)
        temp = data.get("temp") or data.get("temperature")
        hum = data.get("humidity") or data.get("hum")
        fan = data.get("fan", "unknown")
        light = data.get("light", "unknown")

        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        with open(CSV_FILE, mode='a', newline='', encoding='utf-8') as f:
            writer = csv.writer(f)
            writer.writerow([timestamp, temp, hum, fan, light])

        print(f"‚Üí Ghi log: {timestamp} | T={temp}¬∞C | H={hum}% | Qu·∫°t={fan} | ƒê√®n={light}")

    except Exception as e:
        print("‚ö†Ô∏è L·ªói khi x·ª≠ l√Ω message:", e)


def create_client():
    """T·ª± ƒë·ªông x·ª≠ l√Ω s·ª± kh√°c bi·ªát gi·ªØa paho-mqtt v1 v√† v2."""
    try:
        # C√°ch m·ªõi (v2)
        return mqtt_client.Client(client_id=CLIENT_ID, callback_api_version=mqtt_client.CallbackAPIVersion.v5)
    except Exception:
        # C√°ch c≈© (v1)
        return mqtt_client.Client(CLIENT_ID)


def main():
    print("üöÄ Kh·ªüi ƒë·ªông MQTT Logger...")
    client = create_client()
    client.on_connect = on_connect
    client.on_message = on_message
    client.connect(BROKER, PORT)
    client.loop_forever()


if __name__ == '__main__':
    # T·∫°o file CSV n·∫øu ch∆∞a c√≥
    try:
        with open(CSV_FILE, 'x', newline='', encoding='utf-8') as f:
            writer = csv.writer(f)
            writer.writerow(["Th·ªùi gian", "Nhi·ªát ƒë·ªô (¬∞C)", "ƒê·ªô ·∫©m (%)", "Tr·∫°ng th√°i Qu·∫°t", "Tr·∫°ng th√°i ƒê√®n"])
    except FileExistsError:
        pass

    main()
